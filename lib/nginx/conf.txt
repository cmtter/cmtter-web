
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
	underscores_in_headers on;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
	map $http_origin $corsDomain {
    "*" *;
    $http_origin $http_origin;
  }
	
    server {
        listen       8088;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
			proxy_method GET;
            root   html;
            try_files $uri $uri/ /index.html;
			
			# 单页面应用的index.html不缓存
			location = /index.html {
				add_header Cache-Control "no-cache,no-store";
			}
			# 单页面应用的index.html不缓存
			location ~* \.(css|js){
				#add_header Cache-Control "max-age=31536000";
				add_header Cache-Control "no-cache,no-store";
			}
        }
		# http://ip:port/wsapi/a/b/c/d  => http://10.100.30.6/test1/a/b/c/d
		location /wsapi/ {
		  proxy_pass  http://10.100.30.6/test1/;
		  proxy_set_header        Host            $host;
		  proxy_set_header        X-Real-IP       $remote_addr;
		  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		  proxy_set_header        Cookie          $http_cookie;
		  error_page   500 502 503 504  /error.html;
		  # limit_req zone=allips  nodelay;
		  add_header 'Access-Control-Allow-Origin' $corsDomain;
		  # 跨域请求是，携带跨域请求的cookies
		  add_header 'Access-Control-Allow-Credentials' 'true';
		  # 允许的请求类型
		  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		  # 允许的头类型
		  add_header 'Access-Control-Allow-Headers' 'X_PROXY-PASS, DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
		  add_header Cache-Control "no-cache,no-store";
		}
		# nginx不支持proxy_pass变量模式，这个其实可以考虑使用node实现
		location /dwsapi/ {
		  resolver 127.0.0.1 [::1];
		  proxy_pass  http://$http_x_proxy_ip:$http_x_proxy_port/$http_x_proxy_path;
		  proxy_set_header        Host            $host;
		  proxy_set_header        X-Real-IP       $remote_addr;
		  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		  proxy_set_header        Cookie          $http_cookie;
		  # limit_req zone=allips  nodelay;
		  add_header 'Access-Control-Allow-Origin' $corsDomain;
		  # 跨域请求是，携带跨域请求的cookies
		  add_header 'Access-Control-Allow-Credentials' 'true';
		  # 允许的请求类型  http://10.100.30.6/test1/
		  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		  # 代理目标参数
		  add_header 'X-PROXY-PASS' '$http_x_proxy_ip $http_x_proxy_port $http_x_proxy_path';
		  # 允许的头类型
		  add_header 'Access-Control-Allow-Headers' 'X-PROXY-IP,X-PROXY-PORT,X-PROXY-PATH, DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			
		  #禁缓存
		  add_header Cache-Control "no-cache,no-store";
		}
		
		
    }
}
